<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gsLCgwh2sJ8vQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAPPSURBVFhH
        vZdbiFZVGIZTczQysITwkBGIzqTZRREYVFQUiah5UXRjFIhpqdD5IEEQhIF0pIMVpWllClFdlBEKYSVC
        aomUSEVFJVldFERFN9PzLN/Zw//v/duAf/PCw6zv/dZa+/v3XnutPScMVf39/VPhL/htiPwBz2X48YvJ
        +mB3whbhn5RmJby58HrC4xeTTYatCYuIZ8I++A4eil1E3N0CFBOOSLOI+AW4Fk6ET+HMpLpfAJNNhPUJ
        i4in5e8ZcAhOKwlEu+sFNK4BvGlwBJbEKiIetgLOhTcSVsIbtgLGwCUJK+ENWwG98FLCSnjDU4DCb3k7
        1P9RwBT4Bdzl/oar4W74Ml4Tj2Z4d8XEG+FXeAR6Y3dHTDgyTdsz4BpYDTdCX/xTYUzp1CBy3q2l8AA8
        BVvgTZiVLs2iw8XgIfIquMUehFfgHngSPoe1MCpDWoQ/Fl6Er9PvZrgOroTXYHm6NosOX8DlsATOj10J
        zwu8DffHahH+ZngMRseqhPcwrEpYF8mz4KuEHUWfcfaDk2MVEU+HPVB7IxS+j/InuCNWq0hcBB+kfQFU
        +3q7yLn4bklYROwtvylho8iPh29gaqxBYXrrPdF2gb/kB3gLrHxsuhURz4d1CYuIffa3wl0wObb+CHCz
        WgwW7tz1QjGvAm/tFYk9YueBi+cweAGLHAnnwDtlYET8MvwOj8MOcH/4GHxdP4MN4PpQizNsUJgddy58
        n/v18B58C8/A/qSLiC10TUJjz4izoSdWEbF3YH7CQWEOaeukzyLw7H86VpFjYW7CjurYD/NSqB2r7aLP
        AtiQsBKej2BBwo7yGnBZwkFhepsPJOwo+twLyxJWwrvdXMKOoo+b24SErSLxIcxOWBM5F+BumB6rEt6F
        yVVbebvIzYaDCesi6e39BFo2mQHheyZsSVgTOZ/v6oQtck7YC/NiNYsON4Cvo4ttAvTAeeCBsg1q2+yA
        yJ0C7h/2dYxjncO5PB+eSNe6SLpLLUxn3+H3wUL84NwOP8MqMF97THrJ+YasAYv1YPsRnk/8LHiN8Rl2
        VBgrwIGuZDcMq61WNO3R4Ga0CczvBDebUcG2nrl34SNw03IDehBug+/BvNfwWisGJvc2+YvHFQPRdrAL
        0u998/fBxqSLiNeDX0XS/v/CMnBB+sMs2k3q9KTN+8Z5zR4D9+mmj807wUqt3EkmJVVEvBy81WJ7JfiL
        xTNlTro2irwF9to45scm1P7xVPhe1DNebPsGuIA91n3Wx/z4IG8BfTb8l6vpg/K/+BO8xWL7H3DRmfOj
        Va99TBv9E/8FKOzDsnNScuIAAAAASUVORK5CYII=
</value>
  </data>
</root>